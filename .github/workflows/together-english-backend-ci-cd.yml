name: CI/CD together-english-backend

# Event 설정: branch 에 push 이벤트가 생겼을때, 작업 수행
on:
  push:
    branches:
      - main

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
      - name: Grant execute permission to gradlew
        run: chmod +x ./gradlew
      - name: Test with Gradle
        run: ./gradlew test

  build:
    needs: test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Source Code
        uses: actions/checkout@v3
      - name: Make application.yml
        run: |
          mkdir -p ./src/main/resources
          cd ./src/main/resources
          echo "${{ secrets.APPLICATION_PROPERTIES }}" > ./application.yml
          echo "${{ secrets.APPLICATION_PROPERTIES_DEV }}" > ./application-dev.yml
          echo "${{ secrets.APPLICATION_PROPERTIES_PROD }}" > ./application-prod.yml
      - name: Set up Docker BuildX
        uses: docker/setup-buildx-action@v2
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GHCR_PAT }}
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ghcr.io/${{ github.repository_owner }}/together-english-backend:latest

  deploy:
    needs: build
    runs-on: ubuntu-latest
    env:
      EC2_INSTANCE_IP : ${{ secrets.ONPREM_SERVER_IP }}
      SSH_PRIVATE_KEY : ${{ secrets.ONPREM_SERVER_KEY }}
    steps:
      - name: SSH into EC2 and Docker Deploy
        uses: appleboy/ssh-action@master
        with:
          host: ${{ env.EC2_INSTANCE_IP }}
          key: ${{ env.SSH_PRIVATE_KEY }}
          username: deiz
          script: |
            echo ${{ secrets.GHCR_PAT }} | docker login ghcr.io -u ${{ github.repository_owner }} --password-stdin
            docker pull ghcr.io/${{ github.repository_owner }}/together-english-backend:latest
            docker stop together-english-backend || true
            docker rm together-english-backend || true
            docker run -d -p 8080:80 --name together-english-backend -v ${{ secrets.ONPREM_BACKEND_LOGPATH }}:${{ secrets.DOCKER_LOGPATH }} ghcr.io/${{ github.repository_owner }}/together-english-backend:latest
